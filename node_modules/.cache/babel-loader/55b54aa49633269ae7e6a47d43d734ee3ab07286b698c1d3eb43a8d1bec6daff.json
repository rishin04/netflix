{"ast":null,"code":"var _jsxFileName = \"D:\\\\luminar\\\\react\\\\netflix\\\\src\\\\components\\\\Row.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport tmdbaxios from '../tmdbaxios';\nimport './Row.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Row({\n  title,\n  fetchUrl\n}) {\n  _s();\n  const [allMovies, setallMovies] = useState();\n  const base_url = \"https://image.tmdb.org/t/p/original/\";\n  const fetchData = async () => {\n    const {\n      data\n    } = await tmdbaxios.get(fetchUrl);\n    setallMovies(data.results);\n  };\n  console.log(allMovies);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movies-row\",\n      children: allMovies === null || allMovies === void 0 ? void 0 : allMovies.map(item => /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"movie\",\n        src: `${base_url}/${item === null || item === void 0 ? void 0 : item.backdrop_path}`,\n        alt: \"no image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(Row, \"BFZ2pnL3zCeQJ0LRrPGVnF4uYXg=\");\n_c = Row;\nexport default Row;\nvar _c;\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["React","useEffect","useState","tmdbaxios","jsxDEV","_jsxDEV","Row","title","fetchUrl","_s","allMovies","setallMovies","base_url","fetchData","data","get","results","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","src","backdrop_path","alt","_c","$RefreshReg$"],"sources":["D:/luminar/react/netflix/src/components/Row.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport tmdbaxios from '../tmdbaxios'\r\nimport './Row.css';\r\n\r\n function Row({title,fetchUrl}) {\r\n  const [allMovies,setallMovies] = useState()\r\nconst base_url =  \"https://image.tmdb.org/t/p/original/\";\r\n\r\n  const fetchData = async ()=>{\r\n    const {data} =await tmdbaxios.get(fetchUrl)\r\n    setallMovies(data.results)\r\n  }\r\n  console.log(allMovies);\r\n\r\n  useEffect(()=>{\r\n    fetchData()\r\n  },[])\r\n  return (\r\n    <div className='row'>\r\n      <h1>{}</h1>\r\n      <div className='movies-row'>\r\n        {\r\n          allMovies?.map(item=>(\r\n            <img className='movie' src={`${base_url}/${item?.backdrop_path}`} alt='no image' />\r\n          ))\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Row;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,cAAc;AACpC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElB,SAASC,GAAGA,CAAC;EAACC,KAAK;EAACC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAC9B,MAAM,CAACC,SAAS,EAACC,YAAY,CAAC,GAAGT,QAAQ,CAAC,CAAC;EAC7C,MAAMU,QAAQ,GAAI,sCAAsC;EAEtD,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAU;IAC1B,MAAM;MAACC;IAAI,CAAC,GAAE,MAAMX,SAAS,CAACY,GAAG,CAACP,QAAQ,CAAC;IAC3CG,YAAY,CAACG,IAAI,CAACE,OAAO,CAAC;EAC5B,CAAC;EACDC,OAAO,CAACC,GAAG,CAACR,SAAS,CAAC;EAEtBT,SAAS,CAAC,MAAI;IACZY,SAAS,CAAC,CAAC;EACb,CAAC,EAAC,EAAE,CAAC;EACL,oBACER,OAAA;IAAKc,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBf,OAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC,eACXnB,OAAA;MAAKc,SAAS,EAAC,YAAY;MAAAC,QAAA,EAEvBV,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEe,GAAG,CAACC,IAAI,iBACjBrB,OAAA;QAAKc,SAAS,EAAC,OAAO;QAACQ,GAAG,EAAG,GAAEf,QAAS,IAAGc,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,aAAc,EAAE;QAACC,GAAG,EAAC;MAAU;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CACnF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAED,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACf,EAAA,CAzBSH,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AA2Bb,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}